#include <stdlib.h>
#include <stdio.h>
#include "image.h"

/*******************************************************************************
 * Set bit of
 * image: img
 * in frame: frame
 * on position
 * width: w
 * height: h
 *******************************************************************************/ 
void 
setbit(struct *image img, int frame, int w, int h, int bit)
{
  char *data = img->imgdata; //bitmap data
  int iw = img->width;       //width
  int ih = img->height;      //height
  int if = img->frames;      //no of frames

  if (frame > if){
    fprintf(stderr, "Error: out of bounds. Trying to write to the frame no: %d but the last frame is %d\n", frame, if -1);
    exit -1;
  }
  int pn; //pixel location index
  pn = (frame * ih * iw) + ((h*iw) +w);
  data[pn] = bit;
  return;
}

/********************************************************************************
 * drop last frame and shift all other frames to the right
 *******************************************************************************/
void 
rshift(struct *image img)
{
  char *data = img->imgdata; //bitmap data
  int iw = img->width;       //width
  int ih = img->height;      //height
  int if = img->frames;      //no of frames
  int fr_length = ih * iw;
  memcpy(data + fr_length, data, (if-1)*sizeof(char));
  memset(data, 0, fr_length * sizeof(char));
  return;
}

void 
testimgdisplay(struct *image img)
{
  char *data = img->imgdata; //bitmap data
  int iw = img->width;       //width
  int ih = img->height;      //height
  int if = img->frames;      //no of frames

  int row_len = iw * if + if - 1;

  int i,j;
  for (j = 0 ; j < ih; j++){
    for ( i = 0 ; i < row_len ; i+(iw*ih)){
      if(data[(j*iw)+i] != 0){
	printf("X");
      } else 
	{
	  printf(" ");
	}
    }
    printf("\n");
  }
  printf("\n\n");
  return;
}
